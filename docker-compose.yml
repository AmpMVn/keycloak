version: '3.9'

services:
  ms-user-postgres:
    container_name: rentsoft_ms_user_postgres
    image: kartoza/postgis:11.5-2.8
    volumes:
      - $PWD/./postgres:/var/lib/postgresql:rw
    ports:
       - 5442:5432
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
      POSTGRES_DB: keycloak,keycloak_test
      TZ: Europe/Berlin
#
#  traefik:
#    image: library/traefik:alpine
#    container_name: traefik
#    environment:
#      VIRTUAL_HOST: ${TRAEFIK_HOST}
#      HTTPS_METHOD: noredirect
#      VIRTUAL_PORT: 80
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    command: >
#      --logLevel=ERROR
#      --api.dashboard
#      --docker
#      --entrypoints="Name:http Address::80"
#      --defaultentrypoints="http"

  ms-user-keycloak:
    container_name: rentsoft_ms_user_keycloak
    image: quay.io/keycloak/keycloak:19.0.3-legacy
#    command: start-dev
    environment:
      VIRTUAL_HOST: ${KEYCLOAK_HOST}
      VIRTUAL_PORT: 8080
      HTTPS_METHOD: noredirect
      DB_VENDOR: postgres
      DB_ADDR: rentsoft_ms_user_postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: Pa55w0rd
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
      PROXY_ADDRESS_FORWARDING: 'true'
      KEYCLOAK_LOGLEVEL: ALL
#      ROOT_LOGLEVEL: ERROR
#      KC_METRICS_ENABLED: true
#      KEYCLOAK_LOGLEVEL: DEBUG
#      JGROUPS_DISCOVERY_PROTOCOL: JDBC_PING
#      JGROUPS_DISCOVERY_PROPERTIES: datasource_jndi_name=java:jboss/datasources/KeycloakDS,info_writer_sleep_time=500,initialize_sql="CREATE TABLE IF NOT EXISTS JGROUPSPING ( own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, created timestamp default current_timestamp, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name))"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $PWD/./exports:/tmp/keycloak:rw
#    labels:
#      traefik.enable: true
#      traefik.port: 8080
#      traefik.protocol: http
#      traefik.frontend.rule: Host:${KEYCLOAK_HOST}
#      traefik.frontend.passHostHeader: true
#      # traefik.backend.loadbalancer.stickiness: true
    expose:
      - 8080
      - 80

networks:
  default:
    external: true
    name: nginx-proxy